name: Create and publish a Docker image

on:
  push:
    branches: ['master','main','basicgithubci']
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: svt-encore-debian

jobs:
  build-artifact:
    runs-on: ubuntu-latest
    container: 
        image: ghcr.io/janderssonse/avtools-debian
        options: --user root
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

####### # - name: Upload build
####### uses: actions/upload-artifact@v2
####### with:
#######    name: builddir
#######    path: build/libs/encore*.jar

      - name: cache build
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./build
          key: ${{ github.sha }}

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: build-artifact
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Get Cache Build 
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./build
          key: ${{ github.sha }}
      - run: ls ./build    
#     - name: Download Build
#       id: download
#       uses: actions/download-artifact@v2
#       with:
#          name: builddir

      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}
      
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=raw,value={{branch}},priority=1,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
            type=ref,event=tag,priority=2
            type=raw,value=${{ env.IMAGE_NAME }}-{{branch}}-{{date 'YYYYMMDD'}}-{{sha}},priority=31,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=${{ env.IMAGE_NAME }}-{{tag}}-{{date 'YYYYMMDD'}}-{{sha}},priority=32, enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
                  DOCKER_BASE_IMAGE=ghcr.io/janderssonse/avtools-debian:latest
                  USR=avtools
          platforms: x86_64
          no-cache: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
          #registry: ${{ env.REGISTRY }}
          #username: ${{ github.actor }}
          #password: ${{ secrets.GITHUB_TOKEN }}
          #repository: ghcr.io/janderssonse/encore 
          #always_pull: true
          #build_args: DOCKER_BASE_IMAGE=ghcr.io/janderssonse/avtools-debian-squash,ARTIFACTDIR=
          #tag_with_ref: true 
